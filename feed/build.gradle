plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.postgresql'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Web
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// Database
	runtimeOnly 'org.postgresql:postgresql'
	// H2
	runtimeOnly 'com.h2database:h2'
	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	// Cache
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

def generated = 'src/main/generated'

tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(generated))
}

sourceSets {
	main.java.srcDirs += [generated]
}

clean {
	delete file(generated)
}

tasks.named('test') {
	useJUnitPlatform()
}
